version: '3.3'
services:
  shinyproxy:
    image: landscapedatacommons/toolbox:2.6.1
    # Set user for bind mount 'copy'
    user: shinyproxy:shinyproxy
    build:
      context: .
    ports:
      - 8075:8075
    networks:
      - public
      - shiny-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/docker/landscapedatacommons/toolbox/application.yml:/opt/shinyproxy/application.yml
    # The labels section is where you specify configuration values for Traefik.
    # Docker labels do not do anything by themselves, but Traefik reads these so
    # it knows how to treat containers.
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role==manager
      labels:
          - traefik.enable=true # enable traefik
          - traefik.docker.network=public # put it in the same network as traefik
          - traefik.constraint-label=public # assign the same label as traefik so it can be discovered
          - traefik.http.routers.shinyproxy.rule=Host(`${TOOLBOX_DOMAIN? TOOLBOX_DOMAIN variable not set}`) # listen to port 80 for request to TOOLBOX_DOMAIN (use together with the line below)
          - traefik.http.routers.shinyproxy.entrypoints=http
          - traefik.http.middlewares.shinyproxy.redirectscheme.scheme=https # redirect traffic to https
          - traefik.http.middlewares.shinyproxy.redirectscheme.permanent=true # redirect traffic to https
          - traefik.http.routers.shinyproxy-secured.rule=Host(`${TOOLBOX_DOMAIN? TOOLBOX_DOMAIN variable not set}`) # listen to port 443 for request to TOOLBOX_DOMAIN (use together with the line below)
          - traefik.http.routers.shinyproxy-secured.entrypoints=https
          - traefik.http.routers.shinyproxy-secured.tls.certresolver=le # use the Let's Encrypt certificate we set up earlier
          - traefik.http.services.shinyproxy-secured.loadbalancer.server.port=8075 # ask Traefik to search for port 8080 of the shinyproxy service container

  balanced-design-tool:
    image: landscapedatacommons/balanced-design-tool:4.2.1
    networks:
      - shiny-net

  benchmark-exploration-tool:
    image: landscapedatacommons/benchmark-exploration-tool:4.2.1
    networks:
      - shiny-net

  rangeland-indicator-calculator:
    image: landscapedatacommons/rangeland-indicator-calculator:4.2.2
    networks:
      - shiny-net

networks:
  public:
    external: true
  shiny-net:
    external: true